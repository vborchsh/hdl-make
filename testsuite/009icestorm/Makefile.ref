########################################
#  This file was generated by hdlmake  #
#  http://ohwr.org/projects/hdl-make/  #
########################################

TOP_MODULE := gate2
PROJECT := gate2
PROJECT_FILE := $(PROJECT).
TCL_INTERPRETER := yosys -c
ifneq ($(strip $(TOOL_PATH)),)
TCL_INTERPRETER := $(TOOL_PATH)/$(TCL_INTERPRETER)
endif

SYN_FAMILY := iCE40
SYN_DEVICE := ice40
SYN_PACKAGE := ff
SYN_GRADE := 3

ifneq ($(wildcard $(PROJECT_FILE)),)
TCL_CREATE := $(TCL_OPEN)
endif

#target for performing local synthesis
all: bitstream

files.tcl:
		echo 'read_verilog ../files/gate2.v' >> $@

SYN_PRE_SYNTHESIZE_CMD := 
SYN_POST_SYNTHESIZE_CMD := 

SYN_PRE_PAR_CMD := 
SYN_POST_PAR_CMD := 

SYN_PRE_BITSTREAM_CMD := 
SYN_POST_BITSTREAM_CMD := 

synthesize.tcl:
		echo yosys -import >> $@
		echo source files.tcl >> $@
		echo synth_ice40 -top $(TOP_MODULE) -blif $(PROJECT).blif >> $@

synthesize: files.tcl synthesize.tcl ../files/gate2.v
		$(SYN_PRE_SYNTHESIZE_CMD)
		$(TCL_INTERPRETER) $@.tcl
		$(SYN_POST_SYNTHESIZE_CMD)
		touch $@

par.tcl:
		echo catch {exec arachne-pnr -d $(SYN_DEVICE) -P $(SYN_PACKAGE) -p $(SOURCES_PCFFile) -o $(PROJECT).asc $(PROJECT).blif} >> $@

par: synthesize par.tcl
		$(SYN_PRE_PAR_CMD)
		$(TCL_INTERPRETER) $@.tcl
		$(SYN_POST_PAR_CMD)
		touch $@

bitstream.tcl:
		echo catch {exec icepack $(PROJECT).asc $(PROJECT).bin} >> $@

bitstream: par bitstream.tcl
		$(SYN_PRE_BITSTREAM_CMD)
		$(TCL_INTERPRETER) $@.tcl
		$(SYN_POST_BITSTREAM_CMD)
		touch $@

CLEAN_TARGETS := $(LIBS) $(PROJECT).asc $(PROJECT).blif

clean:
		rm -rf $(CLEAN_TARGETS)
		rm -rf synthesize par bitstream
		rm -rf synthesize.tcl par.tcl bitstream.tcl files.tcl

mrproper: clean
		rm -rf $(PROJECT).bin

.PHONY: mrproper clean all
