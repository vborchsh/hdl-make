########################################
#  This file was generated by hdlmake  #
#  http://ohwr.org/projects/hdl-make/  #
########################################

TOP_MODULE := gate3
PROJECT := gate3
PROJECT_FILE := $(PROJECT).xise
TOOL_PATH := 
TCL_INTERPRETER := xtclsh
ifneq ($(strip $(TOOL_PATH)),)
TCL_INTERPRETER := $(TOOL_PATH)/$(TCL_INTERPRETER)
endif

SYN_FAMILY := Spartan6
SYN_DEVICE := xc6slx45t
SYN_PACKAGE := fgg484
SYN_GRADE := -3

TCL_CREATE := project new $(PROJECT_FILE)
TCL_OPEN := project open $(PROJECT_FILE)
TCL_SAVE := project save
TCL_CLOSE := project close
#target for performing local synthesis
all: bitstream

files.tcl:
		echo 'xfile add gate.ngc' >> $@
		echo 'xfile add mygate.ngc' >> $@
		echo 'xfile add ../files/gate3.vhd' >> $@

SYN_PRE_PROJECT_CMD := 
SYN_POST_PROJECT_CMD := 

SYN_PRE_SYNTHESIZE_CMD := 
SYN_POST_SYNTHESIZE_CMD := 

SYN_PRE_TRANSLATE_CMD := 
SYN_POST_TRANSLATE_CMD := 

SYN_PRE_MAP_CMD := 
SYN_POST_MAP_CMD := 

SYN_PRE_PAR_CMD := 
SYN_POST_PAR_CMD := 

SYN_PRE_BITSTREAM_CMD := 
SYN_POST_BITSTREAM_CMD := 

project.tcl:
		echo file delete $(PROJECT_FILE) >> $@
		echo $(TCL_CREATE) >> $@
		echo xfile remove [search \* -type file] >> $@
		echo source files.tcl >> $@
		echo project set '"family"' \"$(SYN_FAMILY)\" >> $@
		echo project set '"device"' \"$(SYN_DEVICE)\" >> $@
		echo project set '"package"' \"$(SYN_PACKAGE)\" >> $@
		echo project set '"speed"' \"$(SYN_GRADE)\" >> $@
		echo project set '"Manual Implementation Compile Order"' \"false\" >> $@
		echo project set '"Auto Implementation Top"' \"false\" >> $@
		echo project set '"Create Binary Configuration File"' \"true\" >> $@
		echo set compile_directory . >> $@
		echo project set top $(TOP_MODULE) >> $@
		echo $(TCL_SAVE) >> $@
		echo $(TCL_CLOSE) >> $@

project: files.tcl project.tcl
		$(SYN_PRE_PROJECT_CMD)
		$(TCL_INTERPRETER) $@.tcl
		$(SYN_POST_PROJECT_CMD)
		touch $@

synthesize.tcl:
		echo $(TCL_OPEN) >> $@
		echo set process {Synthesize - XST} >> $@
		echo process run '$$'process >> $@
		echo set result [process get '$$'process status] >> $@
		echo if { '$$'result == \"errors\" } { >> $@
		echo     exit 1 >> $@
		echo } >> $@
		echo $(TCL_SAVE) >> $@
		echo $(TCL_CLOSE) >> $@

synthesize: project synthesize.tcl gate.ngc mygate.ngc ../files/gate3.vhd
		$(SYN_PRE_SYNTHESIZE_CMD)
		$(TCL_INTERPRETER) $@.tcl
		$(SYN_POST_SYNTHESIZE_CMD)
		touch $@

translate.tcl:
		echo $(TCL_OPEN) >> $@
		echo set process {Translate} >> $@
		echo process run '$$'process >> $@
		echo set result [process get '$$'process status] >> $@
		echo if { '$$'result == \"errors\" } { >> $@
		echo     exit 1 >> $@
		echo } >> $@
		echo $(TCL_SAVE) >> $@
		echo $(TCL_CLOSE) >> $@

translate: synthesize translate.tcl
		$(SYN_PRE_TRANSLATE_CMD)
		$(TCL_INTERPRETER) $@.tcl
		$(SYN_POST_TRANSLATE_CMD)
		touch $@

map.tcl:
		echo $(TCL_OPEN) >> $@
		echo set process {Map} >> $@
		echo process run '$$'process >> $@
		echo set result [process get '$$'process status] >> $@
		echo if { '$$'result == \"errors\" } { >> $@
		echo     exit 1 >> $@
		echo } >> $@
		echo $(TCL_SAVE) >> $@
		echo $(TCL_CLOSE) >> $@

map: translate map.tcl
		$(SYN_PRE_MAP_CMD)
		$(TCL_INTERPRETER) $@.tcl
		$(SYN_POST_MAP_CMD)
		touch $@

par.tcl:
		echo $(TCL_OPEN) >> $@
		echo set process {Place '&' Route} >> $@
		echo process run '$$'process >> $@
		echo set result [process get '$$'process status] >> $@
		echo if { '$$'result == \"errors\" } { >> $@
		echo     exit 1 >> $@
		echo } >> $@
		echo $(TCL_SAVE) >> $@
		echo $(TCL_CLOSE) >> $@

par: map par.tcl
		$(SYN_PRE_PAR_CMD)
		$(TCL_INTERPRETER) $@.tcl
		$(SYN_POST_PAR_CMD)
		touch $@

bitstream.tcl:
		echo $(TCL_OPEN) >> $@
		echo set process {Generate Programming File} >> $@
		echo process run '$$'process >> $@
		echo set result [process get '$$'process status] >> $@
		echo if { '$$'result == \"errors\" } { >> $@
		echo     exit 1 >> $@
		echo } >> $@
		echo $(TCL_SAVE) >> $@
		echo $(TCL_CLOSE) >> $@

bitstream: par bitstream.tcl
		$(SYN_PRE_BITSTREAM_CMD)
		$(TCL_INTERPRETER) $@.tcl
		$(SYN_POST_BITSTREAM_CMD)
		touch $@

CLEAN_TARGETS := $(LIBS) xst xlnx_auto_0_xdb iseconfig _xmsgs _ngo *.b *_summary.html *.bld *.cmd_log *.drc *.lso *.ncd *.ngc *.ngd *.ngr *.pad *.par *.pcf *.prj *.ptwx *.stx *.syr *.twr *.twx *.gise *.gise *.bgn *.unroutes *.ut *.xpi *.xst *.xise *.xwbt *_envsettings.html *_guide.ncd *_map.map *_map.mrp *_map.ncd *_map.ngm *_map.xrpt *_ngdbuild.xrpt *_pad.csv *_pad.txt *_par.xrpt *_summary.xml *_usage.xml *_xst.xrpt usage_statistics_webtalk.html webtalk.log par_usage_statistics.html webtalk_pn.xml

clean:
		rm -rf $(CLEAN_TARGETS)
		rm -rf project synthesize translate map par bitstream
		rm -rf project.tcl synthesize.tcl translate.tcl map.tcl par.tcl bitstream.tcl files.tcl

mrproper: clean
		rm -rf *.bit *.bin *.mcs

.PHONY: mrproper clean all
