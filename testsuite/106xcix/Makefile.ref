########################################
#  This file was generated by hdlmake  #
#  http://ohwr.org/projects/hdl-make/  #
########################################

TOP_MODULE := xcix_test
PROJECT := xcix_test
PROJECT_FILE := $(PROJECT).xpr
TOOL_PATH := 
TCL_INTERPRETER := vivado -mode tcl -source
ifneq ($(strip $(TOOL_PATH)),)
TCL_INTERPRETER := $(TOOL_PATH)/$(TCL_INTERPRETER)
endif

SYN_FAMILY := 
SYN_DEVICE := xc7a200t
SYN_PACKAGE := ffg1156
SYN_GRADE := -2

TCL_CREATE := create_project $(PROJECT) ./
TCL_OPEN := open_project $(PROJECT_FILE)
TCL_CLOSE := exit
ifneq ($(wildcard $(PROJECT_FILE)),)
TCL_CREATE := $(TCL_OPEN)
endif

#target for performing local synthesis
all: bitstream

files.tcl:
	@echo add_files -norecurse '{' >> $@
	@echo 'adc_memory.xcix' >> $@
	@echo 'xcix_test.vhd' >> $@
	@echo '}' >> $@

SYN_PRE_PROJECT_CMD := 
SYN_POST_PROJECT_CMD := 

SYN_PRE_SYNTHESIZE_CMD := 
SYN_POST_SYNTHESIZE_CMD := 

SYN_PRE_PAR_CMD := 
SYN_POST_PAR_CMD := 

SYN_PRE_BITSTREAM_CMD := 
SYN_POST_BITSTREAM_CMD := 

project.tcl:
		echo $(TCL_CREATE) >> $@
		echo # project properties >> $@
		echo set_property "part" "$(SYN_DEVICE)$(SYN_PACKAGE)$(SYN_GRADE)" [current_project] >> $@
		echo set_property "target_language" "vhdl" [current_project] >> $@
		echo set_property "top" "$(TOP_MODULE)" [get_property srcset [current_run]] >> $@
		echo source files.tcl >> $@
		echo update_compile_order -fileset sources_1 >> $@
		echo update_compile_order -fileset sim_1 >> $@
		echo $(TCL_CLOSE) >> $@

project: files.tcl project.tcl
		$(SYN_PRE_PROJECT_CMD)
		$(TCL_INTERPRETER) $@.tcl
		$(SYN_POST_PROJECT_CMD)
		touch $@

synthesize.tcl:
		echo $(TCL_OPEN) >> $@
		echo # synthesize properties >> $@
		echo reset_run synth_1 >> $@
		echo launch_runs synth_1 >> $@
		echo wait_on_run synth_1 >> $@
		echo set result [get_property STATUS [get_runs synth_1]] >> $@
		echo set complete [string match \"*Complete*\" '$$'result] >> $@
		echo set timing [string match \"*Failed Timing*\" '$$'result] >> $@
		echo if { ! '$$'complete } { >> $@
		echo     exit 1 >> $@
		echo } >> $@
		echo if { '$$'timing '&&' 1 } { >> $@
		echo     exit 1 >> $@
		echo } >> $@
		echo $(TCL_CLOSE) >> $@

synthesize: project synthesize.tcl xcix_test.vhd
		$(SYN_PRE_SYNTHESIZE_CMD)
		$(TCL_INTERPRETER) $@.tcl
		$(SYN_POST_SYNTHESIZE_CMD)
		touch $@

par.tcl:
		echo $(TCL_OPEN) >> $@
		echo # par properties >> $@
		echo reset_run impl_1 >> $@
		echo launch_runs impl_1 >> $@
		echo wait_on_run impl_1 >> $@
		echo set result [get_property STATUS [get_runs impl_1]] >> $@
		echo set complete [string match \"*Complete*\" '$$'result] >> $@
		echo set timing [string match \"*Failed Timing*\" '$$'result] >> $@
		echo if { ! '$$'complete } { >> $@
		echo     exit 1 >> $@
		echo } >> $@
		echo if { '$$'timing '&&' 1 } { >> $@
		echo     exit 1 >> $@
		echo } >> $@
		echo $(TCL_CLOSE) >> $@

par: synthesize par.tcl
		$(SYN_PRE_PAR_CMD)
		$(TCL_INTERPRETER) $@.tcl
		$(SYN_POST_PAR_CMD)
		touch $@

bitstream.tcl:
		echo $(TCL_OPEN) >> $@
		echo launch_runs impl_1 -to_step write_bitstream >> $@
		echo wait_on_run impl_1 >> $@
		echo $(TCL_CLOSE) >> $@

bitstream: par bitstream.tcl
		$(SYN_PRE_BITSTREAM_CMD)
		$(TCL_INTERPRETER) $@.tcl
		$(SYN_POST_BITSTREAM_CMD)
		touch $@

CLEAN_TARGETS := $(LIBS) .Xil *.jou *.log *.pb *.dmp $(PROJECT).cache $(PROJECT).data work $(PROJECT).runs $(PROJECT).hw $(PROJECT).sim $(PROJECT).ip_user_files $(PROJECT).srcs $(PROJECT_FILE)

clean:
		rm -rf $(CLEAN_TARGETS)
		rm -rf project synthesize par bitstream
		rm -rf project.tcl synthesize.tcl par.tcl bitstream.tcl files.tcl

mrproper: clean
		rm -rf *.bit *.bin

.PHONY: mrproper clean all
